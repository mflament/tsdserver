{"version":3,"file":"tsdserver.js","sources":["../src/Utils.ts","../src/AliasMap.ts","../src/DefaultModuleResolver.ts","../src/JSImportTransformer.ts","../src/JSResourceWrapper.ts","../src/RequestHandler.ts","../src/Server.ts"],"sourcesContent":["import fs from 'fs';\r\n\r\nexport function fileExists(path: string): boolean {\r\n  const stats = fileStats(path);\r\n  return stats !== null && stats.isFile();\r\n}\r\n\r\nexport function fileStats(path: string): fs.Stats | null {\r\n  try {\r\n    return fs.statSync(path, { bigint: false }) as fs.Stats;\r\n  } catch (e) {\r\n    if (e.code !== 'ENOENT') throw e;\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function replaceMatches(s: string, matches: RegExpMatchArray): string {\r\n  let res = s;\r\n  for (let index = 0; index < matches.length; index++) {\r\n    res = s.replace('$' + index, matches[index]);\r\n  }\r\n  return res;\r\n}\r\n","import { types } from 'util';\r\nimport { replaceMatches } from './Utils';\r\n\r\n/**\r\n * An alias associating a value to a string or a regexp.\r\n */\r\nexport interface Alias {\r\n  /**\r\n   * A function, a string or a regexp used to match the module name.\r\n   */\r\n  find: ((path: string) => boolean | string[] | null | undefined) | string | RegExp;\r\n  /**\r\n   * The replacement used for module path. Matched groups can be refenced using $1, $2, ...\r\n   */\r\n  replace: ((...matches: string[]) => string) | string | null;\r\n}\r\n\r\n/**\r\n * AliasOptions<T>\r\n */\r\nexport type AliasMap = { [key: string]: string } | Alias[];\r\n\r\nfunction isAlias(obj: any): obj is Alias {\r\n  if (obj !== null && typeof obj === 'object') {\r\n    const alias = obj as Alias;\r\n\r\n    const findType = typeof alias.find;\r\n    const replaceType = alias.replace ? typeof alias.replace : null;\r\n    return (\r\n      (findType === 'string' || findType === 'function' || types.isRegExp(alias.find)) &&\r\n      (replaceType === null || replaceType === 'string' || replaceType === 'function')\r\n    );\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isAliasArray(obj: any): obj is Alias[] {\r\n  return Array.isArray(obj) && obj.every(o => isAlias(o));\r\n}\r\n\r\nexport function newAliasResolver(param?: AliasMap): (name: string) => string | null | undefined {\r\n  const aliases: Alias[] = [];\r\n  if (isAliasArray(param)) {\r\n    aliases.push(...param);\r\n  } else if (param != null && typeof param === 'object') {\r\n    for (const key in param) {\r\n      const alias: Alias = {\r\n        find: key,\r\n        replace: param[key]\r\n      };\r\n      if (isAlias(alias)) {\r\n        aliases.push(alias);\r\n      }\r\n    }\r\n  }\r\n\r\n  return name => {\r\n    for (const alias of aliases) {\r\n      if (alias.find === name) {\r\n        if (typeof alias.replace === 'function') return alias.replace(name);\r\n        return alias.replace;\r\n      }\r\n\r\n      if (types.isRegExp(alias.find)) {\r\n        const matches = name.match(alias.find);\r\n        if (matches) {\r\n          if (alias.replace == null) return null;\r\n          if (typeof alias.replace === 'function') return alias.replace(...matches);\r\n          return replaceMatches(alias.replace, matches);\r\n        }\r\n        return undefined;\r\n      }\r\n\r\n      if (typeof alias.find === 'function') {\r\n        let results = alias.find(name);\r\n        if (results) {\r\n          if (results == null) return null;\r\n\r\n          if (typeof results === 'string') results = [results];\r\n          else if (results === true) results = [name];\r\n\r\n          if (alias.replace === null) return null;\r\n          if (typeof alias.replace === 'function') return alias.replace(...results);\r\n          return replaceMatches(alias.replace, results);\r\n        }\r\n        return undefined;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import path from 'path';\r\nimport fs from 'fs';\r\n\r\nimport { fileExists } from './Utils';\r\nimport { AliasMap, newAliasResolver } from './AliasMap';\r\n\r\nexport type ModuleResolver = (name: string) => string | null;\r\n\r\nexport function defaultResolver(aliasMap?: AliasMap): ModuleResolver {\r\n  const resolver = newAliasResolver(aliasMap);\r\n  return name => {\r\n    if (resolver) {\r\n      const resolvedPath = resolver(name);\r\n      if (resolvedPath === null) return null;\r\n      if (resolvedPath) name = resolvedPath;\r\n    }\r\n    const packageFile = path.join('node_modules', name, 'package.json');\r\n    if (fileExists(packageFile)) {\r\n      const npmPackage = JSON.parse(fs.readFileSync(packageFile, { encoding: 'utf-8' }));\r\n      let file = npmPackage['module'] || npmPackage['main'];\r\n      if (typeof file === 'string') {\r\n        if (fileExists(path.join('node_modules', name, file))) {\r\n          return '/' + path.posix.join(name, file);\r\n        }\r\n      }\r\n    }\r\n    return '/' + name;\r\n  };\r\n}\r\n","import acorn from 'acorn';\r\nimport walk from 'acorn-walk';\r\nimport { defaultResolver, ModuleResolver } from './DefaultModuleResolver';\r\nimport { JSImportTransformerOptions } from './Options';\r\nimport { ResourceTransformer } from './ResourceTransformer';\r\n\r\nfunction isModuleResolver(obj: any): obj is ModuleResolver {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nfunction isRelativeModule(name: string) {\r\n  return name.startsWith('/') || name.startsWith('./') || name.startsWith('../');\r\n}\r\n\r\ntype StringLiteral = acorn.Node & {\r\n  type: 'Literal';\r\n  value: string;\r\n  range?: [number, number];\r\n};\r\n\r\ntype ImportDeclaration = acorn.Node & {\r\n  type: 'ImportDeclaration' | 'ImportExpression';\r\n  source: StringLiteral;\r\n};\r\n\r\ntype ExportDeclaration = acorn.Node & {\r\n  type: 'ExportNamedDeclaration' | 'ExportAllDeclaration';\r\n  source: StringLiteral | null;\r\n};\r\n\r\nfunction isImportDeclaration(node: acorn.Node): node is ImportDeclaration {\r\n  return node.type === 'ImportDeclaration' || node.type === 'ImportExpression';\r\n}\r\n\r\nfunction isExportDeclaration(node: acorn.Node): node is ExportDeclaration {\r\n  return node.type === 'ExportNamedDeclaration' || node.type === 'ExportAllDeclaration';\r\n}\r\n\r\nfunction getSource(node: acorn.Node): StringLiteral | null {\r\n  if (isImportDeclaration(node)) return node.source;\r\n  if (isExportDeclaration(node)) return node.source;\r\n  return null;\r\n}\r\n\r\nconst newTransformer = (options?: JSImportTransformerOptions | boolean): ResourceTransformer => {\r\n  if (options === undefined || typeof options === 'boolean') options = {};\r\n  const sourceType = options.sourceType || 'module';\r\n  const ecmaVersion = options.ecmaVersion || 2020;\r\n\r\n  let moduleResolver: ModuleResolver;\r\n  if (isModuleResolver(options.moduleResolver)) {\r\n    moduleResolver = options.moduleResolver;\r\n  } else {\r\n    moduleResolver = defaultResolver(options.moduleResolver);\r\n  }\r\n\r\n  const updateSource = (code: string): string => {\r\n    const parsed = acorn.parse(code, {\r\n      sourceType: sourceType,\r\n      ecmaVersion: ecmaVersion,\r\n      ranges: true\r\n    });\r\n\r\n    let newCode = '';\r\n    let offset = 0;\r\n\r\n    const visitor = (node: acorn.Node): void => {\r\n      const source = getSource(node);\r\n      if (!source) return;\r\n      if (!source.range) {\r\n        console.error('No; range in AST node');\r\n        return;\r\n      }\r\n\r\n      let name = source.value;\r\n      if (!name) return;\r\n\r\n      if (!isRelativeModule(name)) {\r\n        let resolved = moduleResolver(name);\r\n        if (resolved === null) {\r\n          if (node.range) {\r\n            newCode += code.substring(offset, node.range[0]);\r\n            offset = node.range[1];\r\n            return;\r\n          } else console.error('No range for node', node);\r\n        } else {\r\n          name = resolved;\r\n        }\r\n      }\r\n\r\n      if (!name.endsWith('.js')) name += '.js';\r\n\r\n      if (name !== source.value) {\r\n        newCode += code.substring(offset, source.range[0]);\r\n        newCode += '\"' + name + '\"';\r\n        offset = source.range[1];\r\n      }\r\n    };\r\n\r\n    walk.simple(parsed, {\r\n      ImportDeclaration: visitor,\r\n      ImportExpression: visitor,\r\n      ExportNamedDeclaration: visitor,\r\n      ExportAllDeclaration: visitor\r\n    });\r\n\r\n    if (offset < code.length) {\r\n      newCode += code.substring(offset, code.length);\r\n    }\r\n\r\n    return newCode;\r\n  };\r\n\r\n  return async file => {\r\n    if (file.resolvedFile.endsWith('.js')) {\r\n      const code = await file.readText();\r\n      try {\r\n        return updateSource(code);\r\n      } catch (e) {\r\n        console.error('Error parsing ' + file.resolvedFile, e);\r\n        return code;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n};\r\n\r\nexport default newTransformer;\r\n","import { ResourceTransformer } from './ResourceTransformer';\r\n\r\nexport default (): ResourceTransformer => {\r\n  return async file => {\r\n    if (file.requestedPath.endsWith('.js') && !file.resolvedFile.endsWith('.js')) {\r\n      const code = await file.readText();\r\n      return 'export default `' + code + '`;\\n';\r\n    }\r\n    return undefined;\r\n  };\r\n};\r\n","import { IncomingMessage, ServerResponse, OutgoingHttpHeaders, RequestListener } from 'http';\r\nimport url from 'url';\r\nimport fs, { Stats } from 'fs';\r\nimport path from 'path';\r\nimport mime from 'mime-types';\r\nimport JSImportTransformer from './JSImportTransformer';\r\nimport { fileStats } from './Utils';\r\nimport { Options } from './Options';\r\nimport { ResourceTransformer } from './ResourceTransformer';\r\nimport JSResourceWrapper from './JSResourceWrapper';\r\nimport { config } from 'process';\r\n\r\nconst JS_MIME_TYPE = 'application/javascript';\r\n\r\nexport type ResolverFallback = (path: string) => string | undefined;\r\n\r\nexport interface ResolvedFile {\r\n  readonly requestedPath: string;\r\n  readonly resolvedPath: string;\r\n  readonly resolvedFile: string;\r\n  readonly stats: Stats;\r\n  readonly requestedMimeType?: string;\r\n  readonly resolvedMimeType?: string;\r\n\r\n  readText(): Promise<string>;\r\n}\r\n\r\nclass DefaultResolvedFile implements ResolvedFile {\r\n  content: string | null = null;\r\n\r\n  /**\r\n   *\r\n   * @param requestedPath requested path\r\n   * @param resolvedFile resolved resource name\r\n   * @param stats\r\n   */\r\n  constructor(\r\n    readonly requestedPath: string,\r\n    readonly resolvedPath: string,\r\n    readonly resolvedFile: string,\r\n    readonly stats: Stats\r\n  ) {}\r\n\r\n  get requestedMimeType(): string | undefined {\r\n    return mime.lookup(path.extname(this.requestedPath)) || undefined;\r\n  }\r\n\r\n  get resolvedMimeType(): string | undefined {\r\n    return mime.lookup(path.extname(this.resolvedFile)) || undefined;\r\n  }\r\n\r\n  async readText(): Promise<string> {\r\n    if (this.content !== null) {\r\n      return Promise.resolve(this.content);\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      fs.readFile(this.resolvedFile, { encoding: 'utf-8' }, (err, data) => {\r\n        if (err) reject(err);\r\n        else {\r\n          this.content = data;\r\n          resolve(data);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  isUpToDate(message: IncomingMessage): boolean {\r\n    const fileDate = this.stats.mtime;\r\n    let header = message.headers['if-match'];\r\n    if (header !== undefined) {\r\n      const time = parseInt(header);\r\n      if (!isNaN(time)) {\r\n        return fileDate.getTime() === time;\r\n      }\r\n    }\r\n    header = message.headers['if-modified-since'];\r\n    if (header) {\r\n      const time = Date.parse(header);\r\n      if (!isNaN(time)) {\r\n        const fileTime = Math.floor(fileDate.getTime() / 1000);\r\n        const requestTime = Math.floor(time / 1000);\r\n        return fileTime === requestTime;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async write(response: ServerResponse): Promise<void> {\r\n    const headers: OutgoingHttpHeaders = {};\r\n    if (this.requestedMimeType) {\r\n      headers['Content-Type'] = this.requestedMimeType;\r\n    }\r\n    headers['Last-Modified'] = this.stats.mtime.toUTCString();\r\n    headers['ETag'] = this.stats.mtime.getTime();\r\n    headers['Cache-Control'] = 'no-cache, max-age=0';\r\n    response.writeHead(200, headers);\r\n\r\n    if (this.content) {\r\n      return this.writeText(this.content, response);\r\n    } else {\r\n      return this.stream(response);\r\n    }\r\n  }\r\n\r\n  get isJSRequested(): boolean {\r\n    return this.requestedMimeType === JS_MIME_TYPE;\r\n  }\r\n\r\n  get isJSResolved(): boolean {\r\n    return this.resolvedMimeType === JS_MIME_TYPE;\r\n  }\r\n\r\n  private async stream(out: ServerResponse): Promise<void> {\r\n    return new Promise(resolve => {\r\n      const stream = fs.createReadStream(this.resolvedFile);\r\n      function done() {\r\n        stream.close();\r\n        resolve();\r\n      }\r\n      stream.on('end', done);\r\n      stream.on('error', done);\r\n      stream.pipe(out, { end: false });\r\n    });\r\n  }\r\n\r\n  private async writeText(data: string, out: ServerResponse): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      out.on('error', reject);\r\n      out.write(data, 'utf-8', e => {\r\n        if (e) reject(e);\r\n        else resolve();\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nclass FileResolver {\r\n  private readonly directories: string[] = [];\r\n  private readonly fallback: ResolverFallback;\r\n\r\n  constructor(options: Options) {\r\n    if (options.wrapJSResources !== false) {\r\n      this.fallback = p => {\r\n        if (p.endsWith('.js')) return p.substring(0, p.length - 3);\r\n        if (options.fallback) return options.fallback(p);\r\n      };\r\n    } else if (options.fallback) {\r\n      if (typeof options.fallback === 'function') {\r\n        this.fallback = options.fallback;\r\n      } else {\r\n        console.error(\"Invalid 'fallback' option, expected 'function'\", options.fallback);\r\n        this.fallback = () => undefined;\r\n      }\r\n    } else {\r\n      this.fallback = () => undefined;\r\n    }\r\n\r\n    if (options.directories) {\r\n      if (Array.isArray(options.directories)) {\r\n        this.directories.push(...options.directories);\r\n      } else {\r\n        console.error(\"Invalid 'directories' option, expected 'array'\", options.directories);\r\n      }\r\n    }\r\n    this.directories.push('.');\r\n    this.directories.push('node_modules');\r\n  }\r\n\r\n  resolve(requestPath: string): DefaultResolvedFile | undefined {\r\n    let currentPath: string | undefined = requestPath;\r\n    while (currentPath) {\r\n      for (const directory of this.directories) {\r\n        let file = path.resolve(directory, currentPath);\r\n        const stats = fileStats(file);\r\n        if (stats != null) {\r\n          return new DefaultResolvedFile(requestPath, currentPath, file, stats);\r\n        }\r\n      }\r\n      currentPath = this.fallback(currentPath);\r\n    }\r\n  }\r\n}\r\n\r\nfunction extractPath(requestUrl: string): string | null {\r\n  let requestPath = url.parse(requestUrl).pathname;\r\n  if (requestPath) {\r\n    if (requestPath.startsWith('/')) requestPath = requestPath.substring(1);\r\n    requestPath = decodeURI(requestPath);\r\n  }\r\n  return requestPath;\r\n}\r\n\r\nfunction createTransformers(options: Options): ResourceTransformer[] {\r\n  const transformers = [];\r\n  if (options.transformers) {\r\n    if (!Array.isArray(options.transformers)) {\r\n      console.error(\"Invalid option 'transformers', expected 'array'\", options.transformers);\r\n    } else {\r\n      for (const transformer of options.transformers) {\r\n        if (typeof transformer === 'function') {\r\n          transformers.push(transformer);\r\n        } else {\r\n          console.error(\"Invalid option 'transformer', expected 'function'\", transformer);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return transformers;\r\n}\r\n\r\nexport function createRequestListener(options?: Options): RequestListener {\r\n  options = options || {};\r\n  const welcome = options.welcome || 'index.html';\r\n  const fileResolver = new FileResolver(options);\r\n  const transformers = createTransformers(options);\r\n\r\n  if (options.updateJSImport !== false) {\r\n    transformers.push(JSImportTransformer(options.updateJSImport));\r\n  }\r\n\r\n  if (options.wrapJSResources !== false) {\r\n    transformers.push(JSResourceWrapper());\r\n  }\r\n\r\n  async function handle(message: IncomingMessage, response: ServerResponse): Promise<void> {\r\n    if (!message.url) throw new Error('no url in message');\r\n    let requestPath = extractPath(message.url) || welcome;\r\n    const resolvedFile = fileResolver.resolve(requestPath);\r\n    if (resolvedFile) {\r\n      if (options?.debug) console.log('handling request: ' + requestPath);\r\n      if (resolvedFile.isUpToDate(message)) {\r\n        response.writeHead(304, {});\r\n      } else {\r\n        for (const transformer of transformers) {\r\n          let newContent = await transformer(resolvedFile);\r\n          if (newContent !== undefined) {\r\n            resolvedFile.content = newContent;\r\n          }\r\n        }\r\n        await resolvedFile.write(response);\r\n      }\r\n    } else {\r\n      console.info('Resource not found \"' + requestPath + '\"');\r\n      response.writeHead(404, `${requestPath} not found`);\r\n    }\r\n  }\r\n\r\n  return async (message, response) => {\r\n    if (message.method !== 'GET') {\r\n      response.writeHead(405, { Allow: 'GET' });\r\n      response.end();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await handle(message, response);\r\n    } catch (e) {\r\n      console.log('Error handling request: ' + message.url, e);\r\n      response.writeHead(500, 'Server error: ' + e.get);\r\n    } finally {\r\n      response.end();\r\n    }\r\n  };\r\n}\r\n","import arg from 'arg';\r\n\r\nimport path from 'path';\r\n\r\nimport serve, { RequestHandler } from 'micro';\r\nimport { version } from '../package.json';\r\n\r\nimport { Server } from 'http';\r\nimport { AddressInfo } from 'net';\r\nimport { createRequestListener } from './RequestHandler';\r\nimport { isObject, isArray, isNumber, isFunction, isString, isBoolean } from 'util';\r\n\r\nimport { fileExists } from './Utils';\r\n\r\nimport { Options } from './Options';\r\n\r\nconst HELP_MESSAGE = `\r\ntsdserver - Asynchronous HTTP resources for typescript web testing.\r\nUSAGE\r\n\r\n    $ tsdserver --help\r\n    $ tsdserver --version\r\n    $ tsdserver [-l listen_uri [-l ...]] [js or json config]\r\n\r\n    By default tsdserver will listen on 0.0.0.0:3000 and will look for\r\n    a \"tsdserver.config.js\" or \"tsdserver.json\" file in project directory.\r\n\r\n    Specifying a single --listen argument will overwrite the default, not supplement it.\r\n\r\nOPTIONS\r\n\r\n    --help                              shows this help message\r\n\r\n    -v, --version                       displays the current version of tsdserver\r\n\r\n    -l, --listen listen_uri             specify a URI endpoint on which to listen (see below) -\r\n                                        more than one may be specified to listen in multiple places\r\n\r\nENDPOINTS\r\n\r\n    Listen endpoints (specified by the --listen or -l options above) instruct tsdserver\r\n    to listen on one or more interfaces/ports, UNIX domain sockets, or Windows named pipes.\r\n\r\n    For TCP (traditional host/port) endpoints:\r\n\r\n        $ tsdserver -l tcp://hostname:1234\r\n\r\n    For UNIX domain socket endpoints:\r\n\r\n        $ tsdserver -l unix:/path/to/socket.sock\r\n\r\n    For Windows named pipe endpoints:\r\n\r\n        $ tsdserver -l pipe:\\\\\\\\.\\\\pipe\\\\PipeName\r\n`;\r\n\r\ntype EndPoint = (server: Server, listener: () => void) => void;\r\n\r\nfunction parseEndpoint(value: string, name: string): EndPoint {\r\n  const url = new URL(value);\r\n  switch (url.protocol) {\r\n    case 'pipe:': {\r\n      // some special handling\r\n      const cutStr = value.replace(/^pipe:/, '');\r\n      if (cutStr.slice(0, 4) !== '\\\\\\\\.\\\\') {\r\n        throw new Error(`Invalid Windows named pipe endpoint: ${value}`);\r\n      }\r\n      //return [cutStr];\r\n      return (s, listener) => s.listen(cutStr, listener);\r\n    }\r\n    case 'unix:':\r\n      if (!url.pathname) {\r\n        throw new Error(`Invalid UNIX domain socket endpoint: ${value}`);\r\n      }\r\n      return (s, listener) => s.listen(url.pathname, listener);\r\n    case 'tcp:':\r\n      url.port = url.port || '3000';\r\n      return (s, listener) => s.listen(parseInt(url.port), url.hostname, listener);\r\n    default:\r\n      throw new Error(`Unknown --listen endpoint scheme (protocol): ${url.protocol}`);\r\n  }\r\n}\r\n\r\nfunction isAddressInfo(o: any): o is AddressInfo {\r\n  return typeof o === 'object' && (o as AddressInfo).port !== undefined;\r\n}\r\n\r\nasync function loadOptions(files: string[]): Promise<Options | undefined> {\r\n  for (let file of files) {\r\n    if (!path.isAbsolute(file)) file = path.resolve(file);\r\n    if (fileExists(file)) {\r\n      let obj;\r\n      try {\r\n        obj = await require(file);\r\n      } catch (e) {\r\n        console.error('Error loading options file ' + file, e);\r\n      }\r\n      if (obj !== null && typeof obj === 'object') {\r\n        console.info('Using options file ' + file);\r\n        return obj;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nasync function parseCommandLine(): Promise<{ endpoints: EndPoint[]; options?: Options }> {\r\n  // Check if the user defined any options\r\n  const args = arg({\r\n    '--listen': [parseEndpoint],\r\n    '-l': '--listen',\r\n\r\n    '--help': Boolean,\r\n\r\n    '--version': Boolean,\r\n    '-v': '--version'\r\n  });\r\n\r\n  // When `-h` or `--help` are used, print out\r\n  // the usage information\r\n  if (args['--help']) {\r\n    console.error(HELP_MESSAGE);\r\n    process.exit(2);\r\n  }\r\n\r\n  // Print out the package's version when\r\n  // `--version` or `-v` are used\r\n  if (args['--version']) {\r\n    console.log(version);\r\n    process.exit();\r\n  }\r\n\r\n  let endpoints: EndPoint[];\r\n  if (!args['--listen'] || args['--listen'].length === 0) {\r\n    // default endpoint\r\n    endpoints = [(s, cb) => s.listen(3000, cb)];\r\n  } else {\r\n    endpoints = args['--listen'];\r\n  }\r\n\r\n  const optionsFiles = [];\r\n  if (args._[0]) optionsFiles.push(args._[0]);\r\n  optionsFiles.push('tsdserver.config.js', 'tsdserver.json');\r\n  let options = await loadOptions(optionsFiles);\r\n  return {\r\n    endpoints: endpoints,\r\n    options: options\r\n  };\r\n}\r\n\r\nfunction registerShutdown(fn: () => void): void {\r\n  let run = false;\r\n\r\n  const wrapper = () => {\r\n    if (!run) {\r\n      run = true;\r\n      fn();\r\n    }\r\n  };\r\n\r\n  process.on('SIGINT', wrapper);\r\n  process.on('SIGTERM', wrapper);\r\n  process.on('exit', wrapper);\r\n}\r\n\r\nfunction startEndpoint(module: RequestHandler, endpoint: EndPoint): void {\r\n  const server = serve(module);\r\n  server.on('error', err => {\r\n    console.error('tsdserver:', err.stack);\r\n    process.exit(1);\r\n  });\r\n\r\n  endpoint(server, () => {\r\n    registerShutdown(() => server.close());\r\n    const details = server.address();\r\n    // `tsdserver` is designed to run only in production, so\r\n    // this message is perfectly for prod\r\n    if (typeof details === 'string') {\r\n      console.log(`micro: Accepting connections on ${details}`);\r\n    } else if (isAddressInfo(details)) {\r\n      console.log(`micro: Accepting connections on port ${details.port}`);\r\n    } else {\r\n      console.log('micro: Accepting connections');\r\n    }\r\n  });\r\n}\r\n\r\nasync function start(): Promise<void> {\r\n  try {\r\n    const commandLine = await parseCommandLine();\r\n    const listener = createRequestListener(commandLine.options);\r\n    for (const endpoint of commandLine.endpoints) {\r\n      startEndpoint(listener, endpoint);\r\n    }\r\n    registerShutdown(() => console.log('micro: Gracefully shutting down. Please wait...'));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport default { start: start };\r\n"],"names":["fs","types","path","acorn","walk","mime","url","JSImportTransformer","arg","serve"],"mappings":"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"}